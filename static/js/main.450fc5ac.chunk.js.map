{"version":3,"sources":["components/card/ranks.js","components/card/index.js","components/deck/index.js","constants/completedDecks.js","lib/game.js","components/gameboard/index.js","components/remcompcontainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Ranks","rank","spades","rankLabel","className","symbol","scale","defaultHighlight","boxShadow","ranks","Card","id","suit","visible","completed","disabled","highlighted","onClick","onDropped","name","color","highlight","card","useDrag","type","collect","monitor","isDragging","item","drag","useDrop","accept","drop","isOver","handleClick","ref","style","transform","border","width","height","borderRadius","src","alt","cursor","background","Deck","deck","children","cards","length","map","c","index","position","top","completedDecks","lastCard","shuffle","step","sort","a","b","Math","random","createGame","decks","deckIndex","tourIndex","shift","undefined","push","remainingCards","generateCardsForSpade","spadeCards","spadeRanks","uuid","cloneGame","game","JSON","parse","stringify","checkSuiteCombined","last","candidateSuite","slice","allSameSuiteAndVisible","every","candidateRanks","consecutive","newgame","filter","moveCard","move","sourceDeck","movedCards","sourceCardIndex","forEach","targetDeck","possibleMoves","moves","cardIndex","findIndex","previous","isASuite","candidateCard","allPossibleMoves","results","concat","findBiggestDeck","max","calculateNumberOfHiddenCards","reduce","numberOfCards","findBestMove","items","checkCombined","numberOfHidenCards","floor","GameBoard","useState","setRawGame","counter","setCompleted","gameHistory","setGameHistory","Set","highlightedCards","setHightlightedCards","setGame","allDeckEmpty","noRemainingCards","alert","checkWon","droppedCard","targetCard","selectedMove","find","sameMovedCard","lastCardDeck","newGame","onClickCard","display","alignItems","justifyContent","href","marginLeft","previousGame","onMouseDown","m","onMouseUp","handleDealRemainingCards","some","dealRemainingCards","has","dropped","RemainingCompletedContainer","pointerEvents","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.450fc5ac.chunk.js","sourcesContent":["import React from 'react';\n\nconst Ranks = ({ rank, spades, rankLabel }) => {\n  return (\n    <>\n      <div className=\"front\">\n        <div className=\"corner top\">\n          <span className=\"number\">{rankLabel}</span>\n          <span className=\"spades\">{spades.symbol}</span>\n        </div>\n\n        {rank === 2 && (\n          <>\n            <span className=\"suit top_center\">{spades.symbol}</span>\n            <span className=\"suit bottom_center\">{spades.symbol}</span>\n          </>\n        )}\n\n        {rank === 3 && (\n          <>\n            <span className=\"suit top_center\">{spades.symbol}</span>\n            <span className=\"suit middle_center\">{spades.symbol}</span>\n            <span className=\"suit bottom_center\">{spades.symbol}</span>\n          </>\n        )}\n        {rank === 4 && (\n          <>\n            <span className=\"suit top_left\">{spades.symbol}</span>\n            <span className=\"suit top_right\">{spades.symbol}</span>\n            <span className=\"suit bottom_left\">{spades.symbol}</span>\n            <span className=\"suit bottom_right\">{spades.symbol}</span>\n          </>\n        )}\n        {rank === 5 && (\n          <>\n            <span className=\"suit top_left\">{spades.symbol}</span>\n            <span className=\"suit top_right\">{spades.symbol}</span>\n            <span className=\"suit middle_center\">{spades.symbol}</span>\n            <span className=\"suit bottom_left\">{spades.symbol}</span>\n            <span className=\"suit bottom_right\">{spades.symbol}</span>\n          </>\n        )}\n\n        {rank === 6 && (\n          <>\n            <span className=\"suit top_left\">{spades.symbol}</span>\n            <span className=\"suit top_right\">{spades.symbol}</span>\n            <span className=\"suit middle_left\">{spades.symbol}</span>\n            <span className=\"suit middle_right\">{spades.symbol}</span>\n            <span className=\"suit bottom_left\">{spades.symbol}</span>\n            <span className=\"suit bottom_right\">{spades.symbol}</span>\n          </>\n        )}\n\n        {rank === 7 && (\n          <>\n            <span className=\"suit top_left\">{spades.symbol}</span>\n            <span className=\"suit top_right\">{spades.symbol}</span>\n            <span className=\"suit middle_left\">{spades.symbol}</span>\n            <span className=\"suit middle_top\">{spades.symbol}</span>\n            <span className=\"suit middle_right\">{spades.symbol}</span>\n            <span className=\"suit bottom_left\">{spades.symbol}</span>\n            <span className=\"suit bottom_right\">{spades.symbol}</span>\n          </>\n        )}\n        {rank === 8 && (\n          <>\n            <span className=\"suit top_left\">{spades.symbol}</span>\n            <span className=\"suit top_right\">{spades.symbol}</span>\n            <span className=\"suit middle_left\">{spades.symbol}</span>\n            <span className=\"suit middle_top\">{spades.symbol}</span>\n            <span className=\"suit middle_right\">{spades.symbol}</span>\n            <span className=\"suit middle_bottom\">{spades.symbol}</span>\n            <span className=\"suit bottom_left\">{spades.symbol}</span>\n            <span className=\"suit bottom_right\">{spades.symbol}</span>\n          </>\n        )}\n\n        {rank === 9 && (\n          <>\n            <span className=\"suit top_left\">{spades.symbol}</span>\n            <span className=\"suit top_right\">{spades.symbol}</span>\n\n            <span className=\"suit middle_top_left\">{spades.symbol}</span>\n            <span className=\"suit middle_center\">{spades.symbol}</span>\n            <span className=\"suit middle_top_right\">{spades.symbol}</span>\n            <span className=\"suit bottom_left\">{spades.symbol}</span>\n            <span className=\"suit bottom_right\">{spades.symbol}</span>\n            <span className=\"suit middle_bottom_left\">{spades.symbol}</span>\n            <span className=\"suit middle_bottom_right\">{spades.symbol}</span>\n          </>\n        )}\n        {rank === 10 && (\n          <>\n            <span className=\"suit top_left\">{spades.symbol}</span>\n            <span className=\"suit top_right\">{spades.symbol}</span>\n\n            <span className=\"suit middle_top_left\">{spades.symbol}</span>\n            <span className=\"suit middle_top_center\">{spades.symbol}</span>\n            <span className=\"suit middle_top_right\">{spades.symbol}</span>\n            <span className=\"suit bottom_left\">{spades.symbol}</span>\n            <span className=\"suit bottom_right\">{spades.symbol}</span>\n            <span className=\"suit middle_bottom_center\">{spades.symbol}</span>\n            <span className=\"suit middle_bottom_left\">{spades.symbol}</span>\n            <span className=\"suit middle_bottom_right\">{spades.symbol}</span>\n          </>\n        )}\n        {rank > 10 && <span className=\"suit middle_center\">{spades.symbol}</span>}\n        <div className=\"corner bottom\">\n          <span className=\"number\">{rankLabel}</span>\n          <span>{spades.symbol}</span>\n        </div>\n      </div>\n\n      <div className=\"back\"></div>\n    </>\n  );\n};\n\nexport default Ranks;\n","import React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport Ranks from './ranks';\nimport './style.css';\n\nconst scale = 'scale(0.7, 0.7)';\n\nconst defaultHighlight = { boxShadow: 'rgb(152, 217, 237) 0px 0px 7px 9px' };\n\nconst ranks = { 11: 'J', 12: 'Q', 13: 'K', 1: 'A' };\n\nexport const Card = ({ id, suit, rank, visible, completed, disabled, highlighted, onClick, onDropped }) => {\n  const spades = {\n    symbol: '\\u2660',\n    name: 'pique',\n    color: '#0b486b',\n  };\n  const highlight = highlighted ? defaultHighlight : {};\n  const rankLabel = ranks[rank] || rank;\n  const card = { id, suit, rank, visible, disabled, highlighted, onClick };\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: 'card',\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n    item: card,\n  }));\n\n  const [{ isOver }, drop] = useDrop(\n    () => ({\n      accept: 'card',\n      drop: (item) => {\n        onDropped(item, card);\n      },\n      collect: (monitor) => ({\n        isOver: !!monitor.isOver(),\n      }),\n    }),\n    [card]\n  );\n\n  const handleClick = () => {\n    onClick({ id, suit, rank, visible });\n  };\n\n  if (disabled) {\n    return (\n      <div\n        ref={drop}\n        className=\"card disabled\"\n        style={{\n          transform: scale,\n          border: '2px dashed',\n        }}\n      >\n        <div className=\"eren\">\n          <img style={{ width: '165px', height: '260px', borderRadius: '10px' }} src=\"Eren.jpg\" alt=\"Eren.jpg\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (!visible) {\n    return (\n      <div\n        className=\"card not-visible\"\n        onClick={handleClick}\n        style={{\n          background: 'linear-gradient(135deg, #0B486B 0%,#F56217 100%)',\n          transform: scale,\n        }}\n      ></div>\n    );\n  }\n\n  return (\n    <div ref={drop}>\n      <div\n        onClick={handleClick}\n        ref={drag}\n        style={{\n          cursor: 'move',\n        }}\n      >\n        <div className=\"card\" style={{ transform: !completed ? scale : 'none', ...highlight, color: isOver ? 'mauve' : isDragging ? '#f56217' : spades.color }}>\n          <Ranks rank={rank} spades={spades} rankLabel={rankLabel} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport './style.css';\n\nexport const Deck = ({ deck, children, onDropped, completed }) => {\n  const [_, drop] = useDrop(\n    () => ({\n      accept: 'card',\n      drop: (item) => {\n        onDropped(item, deck.cards[deck.cards.length - 1], deck);\n      },\n      collect: (monitor) => ({\n        isOver: !!monitor.isOver(),\n      }),\n    }),\n    [deck]\n  );\n\n  return (\n    <div className={completed ? 'deck-completed' : 'deck-not-completed'} ref={drop}>\n      {children.map((c, index) => (\n        <div\n          className=\"child-deck\"\n          key={index}\n          style={{\n            position: 'relative',\n            top: -index * 235,\n          }}\n        >\n          {c}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Deck;\n","export const completedDecks = [\n  {\n    id: 10,\n    cards: [],\n  },\n  {\n    id: 11,\n    cards: [],\n  },\n  {\n    id: 12,\n    cards: [],\n  },\n  {\n    id: 13,\n    cards: [],\n  },\n  {\n    id: 14,\n    cards: [],\n  },\n  {\n    id: 15,\n    cards: [],\n  },\n  {\n    id: 16,\n    cards: [],\n  },\n  {\n    id: 17,\n    cards: [],\n  },\n];\n","/* eslint-disable array-callback-return */\nimport { uuid } from 'uuidv4';\n\nexport const ranks = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nexport const setInitialGame = () => createGame(shuffle(generateCardsForSpade()));\nexport const lastCard = (deck) => deck.cards[deck.cards.length - 1];\n// suffle cards\nexport const shuffle = (cards) => {\n  for (let step = 0; step < 1; step++) {\n    cards.sort((a, b) => 0.2 - Math.random());\n  }\n  return cards;\n};\n//create game object of Trendyol Case\nexport const createGame = (cards) => {\n  const decks = [];\n  for (let deckIndex = 0; deckIndex < 10; deckIndex++) {\n    for (let tourIndex = 0; tourIndex < 4; tourIndex++) {\n      const card = cards.shift();\n      if (decks[deckIndex] === undefined) {\n        decks[deckIndex] = { id: deckIndex, cards: [] };\n      }\n      if (card) {\n        decks[deckIndex].cards.push({ ...card, visible: false });\n      }\n    }\n  }\n  for (let deckIndex = 0; deckIndex < 4; deckIndex++) {\n    const card = cards.shift();\n    if (card) {\n      decks[deckIndex].cards.push({ ...card, visible: false });\n    }\n  }\n  for (let deckIndex = 0; deckIndex < 10; deckIndex++) {\n    const card = cards.shift();\n    if (card) {\n      decks[deckIndex].cards.push({ ...card, visible: true });\n    }\n  }\n\n  return {\n    decks,\n    remainingCards: cards,\n  };\n};\n\n// generate one suite of spade cards with ranks and id\nexport const generateCardsForSpade = () => {\n  let spadeCards = [];\n  for (let index = 0; index < 8; index++) {\n    const spadeRanks = ranks.map((rank) => ({\n      id: uuid(),\n      rank: rank,\n      suit: 'spades',\n    }));\n    spadeCards = [...spadeCards, ...spadeRanks];\n  }\n  return spadeCards;\n};\n\n// hard copy game object (clone game)\nexport const cloneGame = (game) => JSON.parse(JSON.stringify(game));\n\n// deal the remaining cards\nexport const dealRemainingCards = (game) => {\n  const newGame = cloneGame(game);\n\n  if (game.decks.some((deck) => deck.cards.length === 0)) {\n    alert('All decks should have at least one card to deal remaining cards');\n    return newGame;\n  }\n\n  const cards = newGame.remainingCards;\n  for (let deckIndex = 0; deckIndex < 10; deckIndex++) {\n    const card = cards.shift();\n    if (card) {\n      newGame.decks[deckIndex].cards.push({ ...card, visible: true });\n    }\n  }\n\n  return newGame;\n};\n\n// check spade cards and create new game object\n// spade cards must be suite of sorting asc 1,2,3,4...,13\nexport const checkSuiteCombined = (game) => {\n  for (let deck of game.decks) {\n    const last = lastCard(deck);\n    if (last && last.rank === 13) {\n      const candidateSuite = deck.cards.slice(deck.cards.length - 13, deck.cards.length);\n      const allSameSuiteAndVisible = candidateSuite.every((c) => c.suit === last.suit && c.visible);\n      const candidateRanks = candidateSuite.map((c) => c.rank);\n      const consecutive = JSON.stringify(candidateRanks) === JSON.stringify([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);\n      if (allSameSuiteAndVisible && consecutive) {\n        const newgame = cloneGame(game);\n        newgame.decks[deck.id].cards = newgame.decks[deck.id].cards.filter((c, index) => index < deck.cards.length - 13);\n        const last = lastCard(newgame.decks[deck.id]);\n        if (last) {\n          last.visible = true;\n        }\n        return { game: newgame, consecutive: true };\n      }\n    }\n  }\n  return { game, consecutive: false };\n};\n// Are remaining cards and cards of decks empty ?\nexport const checkWon = (game) => {\n  const allDeckEmpty = game.decks.every((deck) => deck.cards.length === 0);\n  const noRemainingCards = game.remainingCards.length === 0;\n  if (allDeckEmpty && noRemainingCards) {\n    alert('You Win!');\n  }\n  return game;\n};\n\n// move card target deck from source deck logic\nexport const moveCard = (game, move) => {\n  if (move === undefined) {\n    return game;\n  }\n  const newgame = cloneGame(game);\n  const sourceDeck = newgame.decks[move.sourceDeck.id];\n  const movedCards = sourceDeck.cards.slice(move.sourceCardIndex);\n  sourceDeck.cards = sourceDeck.cards.slice(0, move.sourceCardIndex);\n  const last = lastCard(sourceDeck);\n  if (last) {\n    last.visible = true;\n  }\n  movedCards.forEach((c) => newgame.decks[move.targetDeck.id].cards.push(c));\n  return newgame;\n};\n\n// if previous card and current card ranks +1 are equal, this funtion should return false\nexport const isASuite = (cards) => {\n  if (cards.length === 1) {\n    return true;\n  }\n  let previous = cards[0];\n  for (let card of cards.slice(1)) {\n    if (card.rank !== previous.rank + 1) {\n      return false;\n    }\n    previous = card;\n  }\n  return true;\n};\n\n// generated possible moves\nexport const possibleMoves = (card, game) => {\n  const moves = [];\n  if (card.visible) {\n    for (let deck of game.decks) {\n      const cardIndex = deck.cards.findIndex((c) => c.id === card.id);\n\n      if (cardIndex >= 0) {\n        const selectedCards = deck.cards.slice(cardIndex, deck.cards.length);\n        const asuite = isASuite(selectedCards);\n        if (asuite) {\n          const playableDecks = game.decks.filter((deck) => {\n            const candidateCard = lastCard(deck);\n            if (candidateCard === undefined) {\n              return true;\n            }\n            if (candidateCard.rank + 1 === card.rank) {\n              return true;\n            }\n          });\n\n          playableDecks.forEach((targetDeck) =>\n            moves.push({\n              card: card,\n              sourceDeck: deck,\n              sourceCardIndex: cardIndex,\n              targetDeck: targetDeck,\n            })\n          );\n        }\n      }\n    }\n  }\n  return moves;\n};\n// return all possible move\nexport const allPossibleMoves = (game) => {\n  let results = [];\n  for (let deck of game.decks) {\n    for (let card of deck.cards.filter((c) => c.visible)) {\n      const moves = possibleMoves(card, game);\n      results = results.concat(moves);\n    }\n  }\n  return results;\n};\n\nexport const findBiggestDeck = (game) => Math.max(...game.decks.map((deck) => deck.cards.filter((c) => c.visible).length));\n\nexport const randomItem = (items) => shuffle(items)[Math.floor(Math.random() * items.length)];\n\nexport const calculateNumberOfHiddenCards = (game) => game.decks.map((deck) => deck.cards.filter((c) => c.visible === false).length).reduce((a, b) => a + b, 0);\n\nexport const numberOfCards = (game) => game.decks.map((deck) => deck.cards.length).reduce((a, b) => a + b, 0);\n\n// called by card click card action\n// searching and find best move target deck from source deck\nexport const findBestMove = (moves, game) => {\n  if (moves.length === 0) {\n    return;\n  }\n  for (let move of moves) {\n    const checkCombined = checkSuiteCombined(moveCard(game, move));\n    move.numberOfHidenCards = findBiggestDeck(checkCombined.game) + (104 - calculateNumberOfHiddenCards(checkCombined.game)) + (104 - numberOfCards(checkCombined.game));\n  }\n  moves = moves.sort((a, b) => (a.numberOfHidenCards < b.numberOfHidenCards ? -1 : 1));\n\n  let move;\n  if (Math.random() > 0.1) {\n    move = randomItem(moves);\n  } else {\n    move = moves[moves.length - 1];\n  }\n\n  return move;\n};\n","/* eslint-disable array-callback-return */\nimport React, { useState } from 'react';\nimport { completedDecks } from '../../constants/completedDecks';\nimport { allPossibleMoves, checkSuiteCombined, checkWon, dealRemainingCards, findBestMove, moveCard, possibleMoves, setInitialGame } from '../../lib/game';\nimport { Card, Deck, RemainingCompletedContainer } from '../index';\nimport './style.css';\n\nexport const GameBoard = () => {\n  const [game, setRawGame] = useState(setInitialGame());\n  const [completed, setCompleted] = useState({ decks: completedDecks, counter: 0 });\n  const [gameHistory, setGameHistory] = useState([]);\n  const [highlightedCards, setHightlightedCards] = useState(new Set());\n\n  const setGame = (newgame) => {\n    gameHistory.push(game);\n    setGameHistory(gameHistory);\n    let checkCombined = checkSuiteCombined(newgame);\n    if (checkCombined.consecutive)\n      setCompleted({\n        decks: completed.decks.map((deck, index) => {\n          if (index === completed.counter)\n            return {\n              cards: [\n                {\n                  id: '135a8b8e-ad65-4089-9d4c-8ebb260ff076',\n                  rank: 1,\n                  suit: 'spades',\n                  visible: true,\n                },\n              ],\n              id: deck.id,\n            };\n          else return deck;\n        }),\n        counter: completed.counter + 1,\n      });\n\n    setRawGame(checkWon(checkCombined.game));\n  };\n\n  const handleDealRemainingCards = () => {\n    setGame(dealRemainingCards(game));\n  };\n\n  const onDropped = (droppedCard, targetCard, deck) => {\n    let moves = allPossibleMoves(game);\n    const selectedMove = moves.find((move) => {\n      const sameMovedCard = move.card.id === droppedCard.id;\n      const lastCardDeck = move.targetDeck.cards[move.targetDeck.cards.length - 1];\n      if (targetCard) {\n        return sameMovedCard && lastCardDeck && lastCardDeck.id === targetCard.id;\n      } else if (deck) {\n        return sameMovedCard && move.targetDeck.id === deck.id;\n      }\n    });\n    const newGame = moveCard(game, selectedMove);\n    setGame(newGame);\n  };\n\n  const onClickCard = (card) => {\n    const moves = possibleMoves(card, game);\n    if (moves.length > 0) {\n      const newGame = moveCard(game, findBestMove(moves, game));\n      setGame(newGame);\n    }\n  };\n  const handleUndo = () => {\n    const previousGame = gameHistory[gameHistory.length - 1];\n    setGameHistory(gameHistory.slice(0, gameHistory.length - 1));\n    setRawGame(previousGame);\n  };\n\n  const showHint = () => {\n    const moves = allPossibleMoves(game);\n    setHightlightedCards(new Set(moves.map((m) => m.card.id)));\n  };\n  const resetHighlighted = () => setHightlightedCards(new Set());\n  return (\n    <>\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <img src=\"spider.ico\" alt=\"spider.ico\" />\n        <div style={{ display: 'flex', height: '50px', alignItems: 'center' }}>\n          <a href=\"/one-suite-reversed-spider-solitaire\" style={{ marginLeft: 'auto' }}>\n            <button className=\"new-btn\">New</button>\n          </a>\n        </div>\n        <button className=\"undo-btn\" onClick={handleUndo} disabled={gameHistory.length === 0}>\n          Undo\n        </button>\n        <button className=\"hint-btn\" onMouseDown={showHint} onMouseUp={resetHighlighted}>\n          Hint ?\n        </button>\n      </div>\n      <div className=\"remaining-completed-cards\">\n        <RemainingCompletedContainer remainingCards={game.remainingCards} completedDecks={completed.decks} handleDealRemainingCards={handleDealRemainingCards} onDropped={onDropped} />\n\n        <div id=\"cards\" className=\"cards\">\n          {game.decks.map((deck) => {\n            return (\n              <Deck key={deck.id} deck={deck} onDropped={onDropped}>\n                {deck.cards\n                  .map((card) => {\n                    return <Card key={card.id} {...card} onClick={onClickCard} onDropped={onDropped} highlighted={highlightedCards.has(card.id)} />;\n                  })\n                  .concat(deck.cards.length === 0 ? [<Card disabled={true} onDropped={(dropped) => onDropped(dropped, undefined, deck)} />] : [])}\n              </Deck>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GameBoard;\n","/* eslint-disable array-callback-return */\nimport React from 'react';\nimport { Card, Deck } from '../index';\nimport './style.css';\n\nexport const RemainingCompletedContainer = ({ remainingCards, completedDecks, handleDealRemainingCards, onDropped }) => {\n  return (\n    <>\n      <div className=\"completed-cards\">\n        <span style={{ display: 'block' }}>{remainingCards.length > 0 ? <Card visible={false} onClick={handleDealRemainingCards} /> : <Card disabled={true}></Card>}</span>\n        <div style={{ pointerEvents: 'none' }}>\n          {completedDecks.map((deck, index) => {\n            return (\n              <Deck key={deck.id} style={{ transform: 'none' }} deck={deck} completed={true} onDropped={onDropped}>\n                {deck.cards.map((card) => {\n                  return <Card {...card} completed={true} />;\n                })}\n              </Deck>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RemainingCompletedContainer;\n","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport './App.css';\nimport { GameBoard } from './components/index';\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"App\">\n        <GameBoard />\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}